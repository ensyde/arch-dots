(deflisten workspace "$HOME/.config/eww/scripts/workspace")

(defwidget bar []
  (centerbox :orientation "h"
    (leftside)
    (music)
    (sidestuff)))

(defwidget leftside []
  (box :class "leftside" :orientation "h" :space-evenly false :halign "start"
  (button :class "launcher-btn" :onclick "sh ~/.local/bin/launcher" "ÔåÉ ")
  (workspaces)
  )
  )

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    ;;(metric :label "Ôüä "
      ;;      :value volume
        ;;    :onchange "amixer -D pulse sset Master {}%")
    ;;(metric :label "Ô°ö "
      ;;      :value {EWW_RAM.used_mem_perc}
        ;;    :onchange "")
    ;;(metric :label "Óâ± "
      ;;      :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
        ;;    :onchange "")
    (label :class "time"
           :text "ÔÄó  ${time}")))

;;;(defwidget workspaces []
;;  (box :class "workspaces"
;;       :orientation "h"
;;       :space-evenly true
;;       :halign "start"
;;       :spacing 10
;;    (button :onclick "wmctrl -s 0" ÔÑë )
;;    (button :onclick "wmctrl -s 1" ÔÑë )
;;    (button :onclick "wmctrl -s 2" ÔÑë )
;;    (button :onclick "wmctrl -s 3" ÔÑë )
;;    (button :onclick "wmctrl -s 4" ÔÑë )
;;    (button :onclick "wmctrl -s 5" ÔÑë )
;;    ))
(defwidget workspaces []
  (literal :content workspace))


(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ${music}" : "ÔÄÅ  Disconnected"}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%I:%M %p | %b %d, %Y'")
 ;;"date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "6px"
                      :width "98%"
                      :height "24px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
