#! /bin/sh
killall -9 sxhkd dunst picom polybar
bash ~/.config/polybar/launch.sh --forest &
bash $HOME/.local/bin/set-monitors &
bash $HOME/.local/bin/bg.sh &
xrdb ~/.Xresources &
sxhkd &
picom --config ~/.config/bspwm/picom.conf &
xsetroot -cursor_name left_ptr &
# pgrep -x sxhkd > /dev/null || sxhkd &
## -----------------------------------------------
bspc monitor -d I II III IV V VI VII VIII IX X
workspaces() {
	name=1
	for monitor in `bspc query -M`; do
		bspc monitor ${monitor} -n "$name" -d 'I' 'II' 'III' 'IV' 'V' 'VI' 'VII' 'VIII' 'IX' 'X'
		let name++
	done
}
workspaces
## -----------------------------------------------
bspc config border_width         3
bspc config window_gap          12
bspc config focus_follows_pointer true
bspc config pointer_follows_focus true
bspc config click_to_focus false
bspc config ignore_ewmh_focus true
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

bspc config split_ratio          0.65
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config paddingless_monocle true
bspc config single_monocle	false

bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
bspc config merge_overlapping_monitors true

bspc config focused_border_color "#61AFEF" #blue
bspc config normal_border_color "#2E3440" #bg
bspc config active_border_color "#98C379" #magenta
bspc config presel_feedback_color "#A3BE8C" #green


bspc rule -r *:*


bspc rule -a Lxappearance state=floating follow=on focus=on
bspc rule -a kitty state=floating follow=on focus=on
bspc rule -a Pavucontrol state=floating focus=on
bspc rule -a pcmanfm state=floating follow=on focus=on

bspc rule -a feh state=floating follow=on focus=on

sid=$(wmctrl -lx | grep scratch.scratchpad| cut -d' ' -f1| head -1) \
&& [ -z "$(echo $sid)" ] \
	&& alacritty -t scratchpad --class scratch,scratchpad -e zsh -c "macchina; zsh"\
	& sleep 1 \
	&& sid=$(wmctrl -lx | grep scratch.scratchpad| cut -d' ' -f1| head -1) \
	&& echo "$sid" > /tmp/scratchID ;


# LF
lid=$(wmctrl -lx | grep lf.lf| cut -d' ' -f1| head -1) \
&& [ -z "$(echo $lid)" ] \
	&& alacritty --config-file .config/alacritty/lf.yml -t lf --class lf,lf -e lf-ueberzug \
	& sleep 1 \
	&& lid=$(wmctrl -lx | grep lf.lf| cut -d' ' -f1| head -1) \
	&& echo "$lid" > /tmp/lfID;
